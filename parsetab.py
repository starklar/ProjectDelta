
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programleftORleftANDrightNOTleft<LESS_EQUAL>GREATER_EQUALNOT_EQUALEQUAL_EQUALleft+-left*/INT_DIVIDE%leftPOWERrightUPLUSUMINUSAND APPEND COPY DEF ELIF ELSE EQUAL_EQUAL EXTEND FALSE FLOAT GREATER_EQUAL ID IF INDEX INSERT INT INT_DIVIDE LEN LESS_EQUAL NEW_LINE NOT NOT_EQUAL OR POP POWER PRINT RETURN STR TRUE WHILE\n        program : code_lines\n                | optional_new_lines code_lines\n        \n        code_lines : code_line\n                   | code_line new_lines\n                   | code_line new_lines code_lines\n                   | code_line optional_new_lines code_lines\n        \n        code_line : function_def\n                  | statement\n                  | expr\n        \n        block : ':' new_lines optional_new_lines code_lines '#' new_lines\n              | ':' new_lines optional_new_lines code_lines '#'\n        \n        optional_new_lines : new_lines\n                           | empty\n        \n        new_lines : NEW_LINE\n                  | NEW_LINE new_lines\n        \n        statement : assignment_statement\n                  | if_statement \n                  | while_statement\n                  | return_statement\n                  | print_statement\n        \n        assignment_statement : ID '=' expr\n        \n        params : expr\n               | expr ',' params\n        \n        params_or_empty : params\n                        | empty\n        \n        function_def : DEF ID '(' params_or_empty ')' block\n        \n        if_statement : IF expr block\n                     | IF expr block elif_statements\n                     | IF expr block ELSE block\n                     | IF expr block elif_statements ELSE block\n        \n        elif_statements : ELIF expr block\n                        | ELIF expr block elif_statements\n        \n        while_statement : WHILE expr block\n        \n        return_statement : RETURN expr\n                         | RETURN\n        \n        print_statement : PRINT '(' expr ')'\n                        | PRINT '(' ')'\n        \n        expr : ID\n        \n        expr : TRUE\n             | FALSE\n             | INT\n             | FLOAT\n             | STR\n        \n        expr : list\n        \n        expr : tuple\n        \n        expr : sequence_call\n        \n        expr : function_call\n        \n        expr : NOT expr\n             | '+' expr %prec UPLUS\n             | '-' expr %prec UMINUS\n        \n        expr : expr AND expr\n             | expr OR expr\n             | expr EQUAL_EQUAL expr\n             | expr NOT_EQUAL expr\n             | expr '+' expr\n             | expr '-' expr\n             | expr '*' expr\n             | expr '/' expr\n             | expr '%' expr\n             | expr POWER expr\n             | expr INT_DIVIDE expr\n             | expr '>' expr\n             | expr '<' expr\n             | expr GREATER_EQUAL expr\n             | expr LESS_EQUAL expr\n        \n        expr : '(' expr ')'\n        \n        elements : expr ',' elements\n                 | expr ','\n                 | expr\n        \n        elements_or_empty : elements\n                          | empty\n        \n        tuple : '(' elements_or_empty ')'\n              | '(' ')'\n        \n        list : '[' elements_or_empty ']'\n             | '[' ']'\n        \n        sequence_call : sequence_index\n                      | sequence_slice\n                      | sequence_function_call\n                      | sequence_method\n        \n        sequence_index : expr '[' expr ']'\n        \n        sequence_slice : expr '[' ':' ']'\n                       | expr '[' expr ':' ']'\n                       | expr '[' ':' expr ']'\n                       | expr '[' expr ':' expr ']'\n                       | expr '[' ':' ':' ']'\n                       | expr '[' expr ':' ':' ']'\n                       | expr '[' ':' expr ':' ']'\n                       | expr '[' ':' ':' expr ']'\n                       | expr '[' expr ':' expr ':' ']'\n                       | expr '[' expr ':' ':' expr ']'\n                       | expr '[' ':' expr ':' expr ']'\n                       | expr '[' expr ':' expr ':' expr ']'\n        \n        sequence_function_call : LEN '(' expr ')'\n        \n        sequence_method : expr '.' APPEND '(' expr ')'\n                        | expr '.' EXTEND '(' expr ')'\n                        | expr '.' INSERT '(' expr ',' expr ')'\n                        | expr '.' INDEX '(' expr ')'\n                        | expr '.' POP '(' ')'\n                        | expr '.' POP '(' expr ')'\n                        | expr '.' COPY '(' ')'\n        \n        args : expr\n             | expr ',' args\n        \n        args_or_empty : args\n                      | empty\n        \n        function_call : ID '(' args_or_empty ')'\n        \n        empty :\n        "
    
_lr_action_items = {'NEW_LINE':([0,4,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,61,66,68,71,72,73,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,117,118,120,121,123,127,138,141,144,145,146,149,151,153,159,160,165,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[10,10,-7,-8,-9,10,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,-15,-73,-38,-48,-49,-50,-34,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,10,-33,-37,-74,-80,-81,-105,-28,10,-36,-93,-82,-83,-85,-98,-100,-29,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,10,-92,-96,-10,]),'DEF':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,42,43,61,66,68,71,72,73,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,144,145,146,149,151,153,159,160,165,167,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[11,11,-106,-12,-13,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,11,11,-15,-73,-38,-48,-49,-50,-34,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-106,-36,-93,-82,-83,-85,-98,-100,-29,11,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[12,12,-106,-12,-13,-7,-8,-9,-14,62,-38,68,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,68,68,68,68,68,68,68,-76,-77,-78,-79,12,12,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-15,68,68,-73,-38,-48,-49,-50,-34,68,-75,68,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,68,68,-21,-66,68,-72,-27,-33,-37,-74,-80,68,68,-81,68,68,68,68,68,-105,68,-28,68,-106,-36,-93,68,-82,68,-83,-85,-98,-100,68,-29,12,68,-84,-86,-87,-88,-94,-95,68,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'TRUE':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[19,19,-106,-12,-13,-7,-8,-9,-14,-38,19,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,19,19,19,19,19,19,19,-76,-77,-78,-79,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-15,19,19,-73,-38,-48,-49,-50,-34,19,-75,19,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,19,19,-21,-66,19,-72,-27,-33,-37,-74,-80,19,19,-81,19,19,19,19,19,-105,19,-28,19,-106,-36,-93,19,-82,19,-83,-85,-98,-100,19,-29,19,19,-84,-86,-87,-88,-94,-95,19,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'FALSE':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[20,20,-106,-12,-13,-7,-8,-9,-14,-38,20,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,20,20,20,20,20,20,20,-76,-77,-78,-79,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-15,20,20,-73,-38,-48,-49,-50,-34,20,-75,20,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,20,20,-21,-66,20,-72,-27,-33,-37,-74,-80,20,20,-81,20,20,20,20,20,-105,20,-28,20,-106,-36,-93,20,-82,20,-83,-85,-98,-100,20,-29,20,20,-84,-86,-87,-88,-94,-95,20,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'INT':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[21,21,-106,-12,-13,-7,-8,-9,-14,-38,21,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,21,21,21,21,21,21,21,-76,-77,-78,-79,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-15,21,21,-73,-38,-48,-49,-50,-34,21,-75,21,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,21,21,-21,-66,21,-72,-27,-33,-37,-74,-80,21,21,-81,21,21,21,21,21,-105,21,-28,21,-106,-36,-93,21,-82,21,-83,-85,-98,-100,21,-29,21,21,-84,-86,-87,-88,-94,-95,21,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'FLOAT':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[22,22,-106,-12,-13,-7,-8,-9,-14,-38,22,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,22,22,22,22,22,22,22,-76,-77,-78,-79,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-15,22,22,-73,-38,-48,-49,-50,-34,22,-75,22,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,22,22,-21,-66,22,-72,-27,-33,-37,-74,-80,22,22,-81,22,22,22,22,22,-105,22,-28,22,-106,-36,-93,22,-82,22,-83,-85,-98,-100,22,-29,22,22,-84,-86,-87,-88,-94,-95,22,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'STR':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[23,23,-106,-12,-13,-7,-8,-9,-14,-38,23,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,23,23,23,23,23,23,23,-76,-77,-78,-79,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-15,23,23,-73,-38,-48,-49,-50,-34,23,-75,23,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,23,23,-21,-66,23,-72,-27,-33,-37,-74,-80,23,23,-81,23,23,23,23,23,-105,23,-28,23,-106,-36,-93,23,-82,23,-83,-85,-98,-100,23,-29,23,23,-84,-86,-87,-88,-94,-95,23,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'NOT':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[28,28,-106,-12,-13,-7,-8,-9,-14,-38,28,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,28,28,28,28,28,28,28,-76,-77,-78,-79,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-15,28,28,-73,-38,-48,-49,-50,-34,28,-75,28,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,28,28,-21,-66,28,-72,-27,-33,-37,-74,-80,28,28,-81,28,28,28,28,28,-105,28,-28,28,-106,-36,-93,28,-82,28,-83,-85,-98,-100,28,-29,28,28,-84,-86,-87,-88,-94,-95,28,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'+':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,68,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,138,139,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,185,186,187,188,189,190,191,192,193,194,],[29,29,-106,-12,-13,-7,-8,48,-14,-38,29,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,29,29,29,29,29,29,29,-76,-77,-78,-79,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-15,29,29,48,-73,-38,48,-49,-50,48,48,48,29,-75,48,29,48,48,48,48,-55,-56,-57,-58,-59,-60,-61,48,48,48,48,48,29,29,48,48,-66,29,-72,-27,-33,48,-37,-74,48,-80,29,48,29,-81,29,29,29,29,29,48,-105,29,-28,29,-106,-36,-93,48,29,-82,29,-83,48,-85,48,48,48,48,48,-98,-100,29,-29,48,29,29,-84,48,-86,48,-87,-88,-94,-95,29,-97,-99,-26,-30,-31,48,-89,-90,-91,48,-32,-11,-92,-96,-10,]),'-':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,68,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,138,139,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,185,186,187,188,189,190,191,192,193,194,],[30,30,-106,-12,-13,-7,-8,49,-14,-38,30,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,30,30,30,30,30,30,30,-76,-77,-78,-79,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-15,30,30,49,-73,-38,49,-49,-50,49,49,49,30,-75,49,30,49,49,49,49,-55,-56,-57,-58,-59,-60,-61,49,49,49,49,49,30,30,49,49,-66,30,-72,-27,-33,49,-37,-74,49,-80,30,49,30,-81,30,30,30,30,30,49,-105,30,-28,30,-106,-36,-93,49,30,-82,30,-83,49,-85,49,49,49,49,49,-98,-100,30,-29,49,30,30,-84,49,-86,49,-87,-88,-94,-95,30,-97,-99,-26,-30,-31,49,-89,-90,-91,49,-32,-11,-92,-96,-10,]),'(':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[13,13,-106,-12,-13,-7,-8,-9,-14,64,13,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,13,13,13,13,13,13,77,13,-76,-77,-78,-79,81,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-15,107,13,13,-73,64,-48,-49,-50,-34,13,-75,13,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,13,128,129,130,131,132,133,13,-21,-66,13,-72,-27,-33,-37,-74,-80,13,13,-81,13,13,13,13,13,-105,13,-28,13,-106,-36,-93,13,-82,13,-83,-85,-98,-100,13,-29,13,13,-84,-86,-87,-88,-94,-95,13,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'IF':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,42,43,61,66,68,71,72,73,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,144,145,146,149,151,153,159,160,165,167,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[31,31,-106,-12,-13,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,31,31,-15,-73,-38,-48,-49,-50,-34,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-106,-36,-93,-82,-83,-85,-98,-100,-29,31,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'WHILE':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,42,43,61,66,68,71,72,73,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,144,145,146,149,151,153,159,160,165,167,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[32,32,-106,-12,-13,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,32,32,-15,-73,-38,-48,-49,-50,-34,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-106,-36,-93,-82,-83,-85,-98,-100,-29,32,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'RETURN':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,42,43,61,66,68,71,72,73,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,144,145,146,149,151,153,159,160,165,167,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[33,33,-106,-12,-13,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,33,33,-15,-73,-38,-48,-49,-50,-34,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-106,-36,-93,-82,-83,-85,-98,-100,-29,33,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'PRINT':([0,3,4,5,6,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,42,43,61,66,68,71,72,73,76,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,144,145,146,149,151,153,159,160,165,167,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[34,34,-106,-12,-13,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,34,34,-15,-73,-38,-48,-49,-50,-34,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-106,-36,-93,-82,-83,-85,-98,-100,-29,34,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'[':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,65,66,68,71,72,73,74,75,76,77,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,107,108,112,113,114,115,116,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,137,138,139,141,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,182,183,185,186,187,188,189,190,191,192,193,194,],[35,35,-106,-12,-13,-7,-8,59,-14,-38,35,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,35,35,35,35,35,35,35,-76,-77,-78,-79,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-15,35,35,59,-73,-38,-48,-49,-50,59,59,59,35,-75,59,35,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,59,35,35,59,59,-66,35,-72,-27,-33,59,-37,-74,59,-80,35,59,35,-81,35,35,35,35,35,59,-105,35,-28,35,-106,-36,-93,59,35,-82,35,-83,59,-85,59,59,59,59,59,-98,-100,35,-29,59,35,35,-84,59,-86,59,-87,-88,-94,-95,35,-97,-99,-26,-30,-31,59,-89,-90,-91,59,-32,-11,-92,-96,-10,]),'LEN':([0,3,4,5,6,7,8,9,10,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,61,63,64,66,68,71,72,73,76,77,79,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,107,108,113,114,115,116,118,120,121,123,124,126,127,128,129,130,131,132,138,139,141,143,144,145,146,148,149,150,151,153,159,160,162,165,167,168,169,171,173,174,175,176,177,178,179,180,182,183,186,187,188,190,191,192,193,194,],[40,40,-106,-12,-13,-7,-8,-9,-14,-38,40,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,40,40,40,40,40,40,40,-76,-77,-78,-79,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-15,40,40,-73,-38,-48,-49,-50,-34,40,-75,40,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,40,40,-21,-66,40,-72,-27,-33,-37,-74,-80,40,40,-81,40,40,40,40,40,-105,40,-28,40,-106,-36,-93,40,-82,40,-83,-85,-98,-100,40,-29,40,40,-84,-86,-87,-88,-94,-95,40,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'$end':([1,2,4,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,41,42,61,66,68,71,72,73,76,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,145,146,149,151,153,159,160,165,169,171,173,174,175,176,178,179,180,182,183,186,187,188,190,191,192,193,194,],[0,-1,-3,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,-2,-4,-15,-73,-38,-48,-49,-50,-34,-75,-5,-6,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-36,-93,-82,-83,-85,-98,-100,-29,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,-89,-90,-91,-32,-11,-92,-96,-10,]),'#':([4,7,8,9,10,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,33,36,37,38,39,42,61,66,68,71,72,73,76,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,108,113,115,116,118,120,121,123,127,138,141,145,146,149,151,153,159,160,165,169,171,173,174,175,176,178,179,180,182,183,184,186,187,188,190,191,192,193,194,],[-3,-7,-8,-9,-14,-38,-16,-17,-18,-19,-20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-35,-76,-77,-78,-79,-4,-15,-73,-38,-48,-49,-50,-34,-75,-5,-6,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-21,-66,-72,-27,-33,-37,-74,-80,-81,-105,-28,-36,-93,-82,-83,-85,-98,-100,-29,-84,-86,-87,-88,-94,-95,-97,-99,-26,-30,-31,191,-89,-90,-91,-32,-11,-92,-96,-10,]),'AND':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[44,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,44,-73,-38,-48,-49,-50,44,44,44,-75,44,-51,44,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,44,44,44,-66,-72,44,-74,44,-80,44,-81,44,-105,-93,44,-82,-83,44,-85,44,44,44,44,44,-98,-100,44,-84,44,-86,44,-87,-88,-94,-95,-97,-99,44,-89,-90,-91,44,-92,-96,]),'OR':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[45,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,45,-73,-38,-48,-49,-50,45,45,45,-75,45,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,45,45,45,-66,-72,45,-74,45,-80,45,-81,45,-105,-93,45,-82,-83,45,-85,45,45,45,45,45,-98,-100,45,-84,45,-86,45,-87,-88,-94,-95,-97,-99,45,-89,-90,-91,45,-92,-96,]),'EQUAL_EQUAL':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[46,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,46,-73,-38,46,-49,-50,46,46,46,-75,46,46,46,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,46,46,46,-66,-72,46,-74,46,-80,46,-81,46,-105,-93,46,-82,-83,46,-85,46,46,46,46,46,-98,-100,46,-84,46,-86,46,-87,-88,-94,-95,-97,-99,46,-89,-90,-91,46,-92,-96,]),'NOT_EQUAL':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[47,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,47,-73,-38,47,-49,-50,47,47,47,-75,47,47,47,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,47,47,47,-66,-72,47,-74,47,-80,47,-81,47,-105,-93,47,-82,-83,47,-85,47,47,47,47,47,-98,-100,47,-84,47,-86,47,-87,-88,-94,-95,-97,-99,47,-89,-90,-91,47,-92,-96,]),'*':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[50,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,50,-73,-38,50,-49,-50,50,50,50,-75,50,50,50,50,50,50,50,-57,-58,-59,-60,-61,50,50,50,50,50,50,50,-66,-72,50,-74,50,-80,50,-81,50,-105,-93,50,-82,-83,50,-85,50,50,50,50,50,-98,-100,50,-84,50,-86,50,-87,-88,-94,-95,-97,-99,50,-89,-90,-91,50,-92,-96,]),'/':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[51,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,51,-73,-38,51,-49,-50,51,51,51,-75,51,51,51,51,51,51,51,-57,-58,-59,-60,-61,51,51,51,51,51,51,51,-66,-72,51,-74,51,-80,51,-81,51,-105,-93,51,-82,-83,51,-85,51,51,51,51,51,-98,-100,51,-84,51,-86,51,-87,-88,-94,-95,-97,-99,51,-89,-90,-91,51,-92,-96,]),'%':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[52,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,52,-73,-38,52,-49,-50,52,52,52,-75,52,52,52,52,52,52,52,-57,-58,-59,-60,-61,52,52,52,52,52,52,52,-66,-72,52,-74,52,-80,52,-81,52,-105,-93,52,-82,-83,52,-85,52,52,52,52,52,-98,-100,52,-84,52,-86,52,-87,-88,-94,-95,-97,-99,52,-89,-90,-91,52,-92,-96,]),'POWER':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[53,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,53,-73,-38,53,-49,-50,53,53,53,-75,53,53,53,53,53,53,53,53,53,53,-60,53,53,53,53,53,53,53,53,-66,-72,53,-74,53,-80,53,-81,53,-105,-93,53,-82,-83,53,-85,53,53,53,53,53,-98,-100,53,-84,53,-86,53,-87,-88,-94,-95,-97,-99,53,-89,-90,-91,53,-92,-96,]),'INT_DIVIDE':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[54,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,54,-73,-38,54,-49,-50,54,54,54,-75,54,54,54,54,54,54,54,-57,-58,-59,-60,-61,54,54,54,54,54,54,54,-66,-72,54,-74,54,-80,54,-81,54,-105,-93,54,-82,-83,54,-85,54,54,54,54,54,-98,-100,54,-84,54,-86,54,-87,-88,-94,-95,-97,-99,54,-89,-90,-91,54,-92,-96,]),'>':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[55,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,55,-73,-38,55,-49,-50,55,55,55,-75,55,55,55,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,55,55,55,-66,-72,55,-74,55,-80,55,-81,55,-105,-93,55,-82,-83,55,-85,55,55,55,55,55,-98,-100,55,-84,55,-86,55,-87,-88,-94,-95,-97,-99,55,-89,-90,-91,55,-92,-96,]),'<':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[56,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,56,-73,-38,56,-49,-50,56,56,56,-75,56,56,56,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,56,56,56,-66,-72,56,-74,56,-80,56,-81,56,-105,-93,56,-82,-83,56,-85,56,56,56,56,56,-98,-100,56,-84,56,-86,56,-87,-88,-94,-95,-97,-99,56,-89,-90,-91,56,-92,-96,]),'GREATER_EQUAL':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[57,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,57,-73,-38,57,-49,-50,57,57,57,-75,57,57,57,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,57,57,57,-66,-72,57,-74,57,-80,57,-81,57,-105,-93,57,-82,-83,57,-85,57,57,57,57,57,-98,-100,57,-84,57,-86,57,-87,-88,-94,-95,-97,-99,57,-89,-90,-91,57,-92,-96,]),'LESS_EQUAL':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[58,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,58,-73,-38,58,-49,-50,58,58,58,-75,58,58,58,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,58,58,58,-66,-72,58,-74,58,-80,58,-81,58,-105,-93,58,-82,-83,58,-85,58,58,58,58,58,-98,-100,58,-84,58,-86,58,-87,-88,-94,-95,-97,-99,58,-89,-90,-91,58,-92,-96,]),'.':([9,12,19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,74,75,76,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,113,115,119,121,122,123,125,127,137,138,146,147,149,151,152,153,154,155,156,157,158,159,160,166,169,170,171,172,173,174,175,176,178,179,185,186,187,188,189,192,193,],[60,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,60,-73,-38,-48,-49,-50,60,60,60,-75,60,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,60,60,60,-66,-72,60,-74,60,-80,60,-81,60,-105,-93,60,-82,-83,60,-85,60,60,60,60,60,-98,-100,60,-84,60,-86,60,-87,-88,-94,-95,-97,-99,60,-89,-90,-91,60,-92,-96,]),'ELSE':([10,61,116,141,183,190,191,194,],[-14,-15,142,164,-31,-32,-11,-10,]),'ELIF':([10,61,116,183,191,194,],[-14,-15,143,143,-11,-10,]),'=':([12,],[63,]),')':([13,19,20,21,22,23,24,25,26,27,36,37,38,39,64,65,66,67,68,69,70,71,72,73,77,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,107,109,110,111,112,113,114,115,119,121,122,123,127,132,133,134,135,136,137,138,140,146,149,151,153,154,155,157,158,159,160,163,169,171,173,174,175,176,178,179,181,186,187,188,189,192,193,],[66,-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,-106,113,-73,115,-38,-70,-71,-48,-49,-50,120,-75,-69,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-106,138,-103,-104,-101,-66,-68,-72,145,-74,146,-80,-81,159,160,161,-24,-25,-22,-105,-67,-93,-82,-83,-85,175,176,178,179,-98,-100,-102,-84,-86,-87,-88,-94,-95,-97,-99,-23,-89,-90,-91,193,-92,-96,]),',':([19,20,21,22,23,24,25,26,27,36,37,38,39,65,66,68,71,72,73,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,112,113,115,121,123,127,137,138,146,149,151,153,156,159,160,169,171,173,174,175,176,178,179,186,187,188,192,193,],[-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,114,-73,-38,-48,-49,-50,-75,114,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,139,-66,-72,-74,-80,-81,162,-105,-93,-82,-83,-85,177,-98,-100,-84,-86,-87,-88,-94,-95,-97,-99,-89,-90,-91,-92,-96,]),':':([19,20,21,22,23,24,25,26,27,36,37,38,39,59,66,68,71,72,73,74,75,79,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,113,115,121,123,124,125,127,138,142,146,147,149,151,153,159,160,161,164,166,169,171,173,174,175,176,178,179,186,187,188,192,193,],[-39,-40,-41,-42,-43,-44,-45,-46,-47,-76,-77,-78,-79,100,-73,-38,-48,-49,-50,117,117,-75,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,124,126,-66,-72,-74,-80,148,150,-81,-105,117,-93,168,-82,-83,-85,-98,-100,117,117,117,-84,-86,-87,-88,-94,-95,-97,-99,-89,-90,-91,-92,-96,]),']':([19,20,21,22,23,24,25,26,27,35,36,37,38,39,66,68,69,70,71,72,73,78,79,80,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,113,114,115,121,123,124,125,126,127,138,140,146,147,148,149,150,151,152,153,159,160,168,169,170,171,172,173,174,175,176,178,179,185,186,187,188,192,193,],[-39,-40,-41,-42,-43,-44,-45,-46,-47,79,-76,-77,-78,-79,-73,-38,-70,-71,-48,-49,-50,121,-75,-69,-51,-52,-53,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,123,127,-66,-68,-72,-74,-80,149,151,153,-81,-105,-67,-93,169,171,-82,173,-83,174,-85,-98,-100,186,-84,187,-86,188,-87,-88,-94,-95,-97,-99,192,-89,-90,-91,-92,-96,]),'APPEND':([60,],[101,]),'EXTEND':([60,],[102,]),'INSERT':([60,],[103,]),'INDEX':([60,],[104,]),'POP':([60,],[105,]),'COPY':([60,],[106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'code_lines':([0,3,42,43,167,],[2,41,82,83,184,]),'optional_new_lines':([0,4,144,],[3,43,167,]),'code_line':([0,3,42,43,167,],[4,4,4,4,4,]),'new_lines':([0,4,10,117,144,191,],[5,42,61,144,5,194,]),'empty':([0,4,13,35,64,107,144,],[6,6,70,70,111,136,6,]),'function_def':([0,3,42,43,167,],[7,7,7,7,7,]),'statement':([0,3,42,43,167,],[8,8,8,8,8,]),'expr':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[9,9,65,71,72,73,74,75,76,80,9,9,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,108,112,119,122,125,137,80,147,152,154,155,156,157,158,112,166,170,172,137,9,185,189,]),'assignment_statement':([0,3,42,43,167,],[14,14,14,14,14,]),'if_statement':([0,3,42,43,167,],[15,15,15,15,15,]),'while_statement':([0,3,42,43,167,],[16,16,16,16,16,]),'return_statement':([0,3,42,43,167,],[17,17,17,17,17,]),'print_statement':([0,3,42,43,167,],[18,18,18,18,18,]),'list':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'tuple':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'sequence_call':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'function_call':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'sequence_index':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'sequence_slice':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'sequence_function_call':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'sequence_method':([0,3,13,28,29,30,31,32,33,35,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,63,64,77,81,100,107,114,124,126,128,129,130,131,132,139,143,148,150,162,167,168,177,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'elements_or_empty':([13,35,],[67,78,]),'elements':([13,35,114,],[69,69,140,]),'args_or_empty':([64,],[109,]),'args':([64,139,],[110,163,]),'block':([74,75,142,161,164,166,],[116,118,165,180,182,183,]),'params_or_empty':([107,],[134,]),'params':([107,162,],[135,181,]),'elif_statements':([116,183,],[141,190,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> code_lines','program',1,'p_program','miniPythonParser.py',27),
  ('program -> optional_new_lines code_lines','program',2,'p_program','miniPythonParser.py',28),
  ('code_lines -> code_line','code_lines',1,'p_code_lines','miniPythonParser.py',38),
  ('code_lines -> code_line new_lines','code_lines',2,'p_code_lines','miniPythonParser.py',39),
  ('code_lines -> code_line new_lines code_lines','code_lines',3,'p_code_lines','miniPythonParser.py',40),
  ('code_lines -> code_line optional_new_lines code_lines','code_lines',3,'p_code_lines','miniPythonParser.py',41),
  ('code_line -> function_def','code_line',1,'p_code_line','miniPythonParser.py',50),
  ('code_line -> statement','code_line',1,'p_code_line','miniPythonParser.py',51),
  ('code_line -> expr','code_line',1,'p_code_line','miniPythonParser.py',52),
  ('block -> : new_lines optional_new_lines code_lines # new_lines','block',6,'p_block','miniPythonParser.py',59),
  ('block -> : new_lines optional_new_lines code_lines #','block',5,'p_block','miniPythonParser.py',60),
  ('optional_new_lines -> new_lines','optional_new_lines',1,'p_optional_new_lines','miniPythonParser.py',67),
  ('optional_new_lines -> empty','optional_new_lines',1,'p_optional_new_lines','miniPythonParser.py',68),
  ('new_lines -> NEW_LINE','new_lines',1,'p_new_lines','miniPythonParser.py',75),
  ('new_lines -> NEW_LINE new_lines','new_lines',2,'p_new_lines','miniPythonParser.py',76),
  ('statement -> assignment_statement','statement',1,'p_statement','miniPythonParser.py',83),
  ('statement -> if_statement','statement',1,'p_statement','miniPythonParser.py',84),
  ('statement -> while_statement','statement',1,'p_statement','miniPythonParser.py',85),
  ('statement -> return_statement','statement',1,'p_statement','miniPythonParser.py',86),
  ('statement -> print_statement','statement',1,'p_statement','miniPythonParser.py',87),
  ('assignment_statement -> ID = expr','assignment_statement',3,'p_assignment_statement','miniPythonParser.py',94),
  ('params -> expr','params',1,'p_params','miniPythonParser.py',101),
  ('params -> expr , params','params',3,'p_params','miniPythonParser.py',102),
  ('params_or_empty -> params','params_or_empty',1,'p_params_or_empty','miniPythonParser.py',111),
  ('params_or_empty -> empty','params_or_empty',1,'p_params_or_empty','miniPythonParser.py',112),
  ('function_def -> DEF ID ( params_or_empty ) block','function_def',6,'p_function_def','miniPythonParser.py',118),
  ('if_statement -> IF expr block','if_statement',3,'p_if_statement','miniPythonParser.py',125),
  ('if_statement -> IF expr block elif_statements','if_statement',4,'p_if_statement','miniPythonParser.py',126),
  ('if_statement -> IF expr block ELSE block','if_statement',5,'p_if_statement','miniPythonParser.py',127),
  ('if_statement -> IF expr block elif_statements ELSE block','if_statement',6,'p_if_statement','miniPythonParser.py',128),
  ('elif_statements -> ELIF expr block','elif_statements',3,'p_elif_statements','miniPythonParser.py',142),
  ('elif_statements -> ELIF expr block elif_statements','elif_statements',4,'p_elif_statements','miniPythonParser.py',143),
  ('while_statement -> WHILE expr block','while_statement',3,'p_while_statement','miniPythonParser.py',153),
  ('return_statement -> RETURN expr','return_statement',2,'p_return_statement','miniPythonParser.py',159),
  ('return_statement -> RETURN','return_statement',1,'p_return_statement','miniPythonParser.py',160),
  ('print_statement -> PRINT ( expr )','print_statement',4,'p_print_statement','miniPythonParser.py',170),
  ('print_statement -> PRINT ( )','print_statement',3,'p_print_statement','miniPythonParser.py',171),
  ('expr -> ID','expr',1,'p_expr_id','miniPythonParser.py',181),
  ('expr -> TRUE','expr',1,'p_expr_literal','miniPythonParser.py',188),
  ('expr -> FALSE','expr',1,'p_expr_literal','miniPythonParser.py',189),
  ('expr -> INT','expr',1,'p_expr_literal','miniPythonParser.py',190),
  ('expr -> FLOAT','expr',1,'p_expr_literal','miniPythonParser.py',191),
  ('expr -> STR','expr',1,'p_expr_literal','miniPythonParser.py',192),
  ('expr -> list','expr',1,'p_expr_list','miniPythonParser.py',199),
  ('expr -> tuple','expr',1,'p_expr_tuple','miniPythonParser.py',206),
  ('expr -> sequence_call','expr',1,'p_expr_sequence_call','miniPythonParser.py',213),
  ('expr -> function_call','expr',1,'p_expr_function_call','miniPythonParser.py',220),
  ('expr -> NOT expr','expr',2,'p_expr_unary_op','miniPythonParser.py',227),
  ('expr -> + expr','expr',2,'p_expr_unary_op','miniPythonParser.py',228),
  ('expr -> - expr','expr',2,'p_expr_unary_op','miniPythonParser.py',229),
  ('expr -> expr AND expr','expr',3,'p_expr_binary_op','miniPythonParser.py',236),
  ('expr -> expr OR expr','expr',3,'p_expr_binary_op','miniPythonParser.py',237),
  ('expr -> expr EQUAL_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',238),
  ('expr -> expr NOT_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',239),
  ('expr -> expr + expr','expr',3,'p_expr_binary_op','miniPythonParser.py',240),
  ('expr -> expr - expr','expr',3,'p_expr_binary_op','miniPythonParser.py',241),
  ('expr -> expr * expr','expr',3,'p_expr_binary_op','miniPythonParser.py',242),
  ('expr -> expr / expr','expr',3,'p_expr_binary_op','miniPythonParser.py',243),
  ('expr -> expr % expr','expr',3,'p_expr_binary_op','miniPythonParser.py',244),
  ('expr -> expr POWER expr','expr',3,'p_expr_binary_op','miniPythonParser.py',245),
  ('expr -> expr INT_DIVIDE expr','expr',3,'p_expr_binary_op','miniPythonParser.py',246),
  ('expr -> expr > expr','expr',3,'p_expr_binary_op','miniPythonParser.py',247),
  ('expr -> expr < expr','expr',3,'p_expr_binary_op','miniPythonParser.py',248),
  ('expr -> expr GREATER_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',249),
  ('expr -> expr LESS_EQUAL expr','expr',3,'p_expr_binary_op','miniPythonParser.py',250),
  ('expr -> ( expr )','expr',3,'p_expr_group','miniPythonParser.py',257),
  ('elements -> expr , elements','elements',3,'p_elements','miniPythonParser.py',264),
  ('elements -> expr ,','elements',2,'p_elements','miniPythonParser.py',265),
  ('elements -> expr','elements',1,'p_elements','miniPythonParser.py',266),
  ('elements_or_empty -> elements','elements_or_empty',1,'p_elements_or_empty','miniPythonParser.py',276),
  ('elements_or_empty -> empty','elements_or_empty',1,'p_elements_or_empty','miniPythonParser.py',277),
  ('tuple -> ( elements_or_empty )','tuple',3,'p_tuple','miniPythonParser.py',284),
  ('tuple -> ( )','tuple',2,'p_tuple','miniPythonParser.py',285),
  ('list -> [ elements_or_empty ]','list',3,'p_list','miniPythonParser.py',295),
  ('list -> [ ]','list',2,'p_list','miniPythonParser.py',296),
  ('sequence_call -> sequence_index','sequence_call',1,'p_sequence_call','miniPythonParser.py',306),
  ('sequence_call -> sequence_slice','sequence_call',1,'p_sequence_call','miniPythonParser.py',307),
  ('sequence_call -> sequence_function_call','sequence_call',1,'p_sequence_call','miniPythonParser.py',308),
  ('sequence_call -> sequence_method','sequence_call',1,'p_sequence_call','miniPythonParser.py',309),
  ('sequence_index -> expr [ expr ]','sequence_index',4,'p_sequence_index','miniPythonParser.py',316),
  ('sequence_slice -> expr [ : ]','sequence_slice',4,'p_sequence_slice','miniPythonParser.py',323),
  ('sequence_slice -> expr [ expr : ]','sequence_slice',5,'p_sequence_slice','miniPythonParser.py',324),
  ('sequence_slice -> expr [ : expr ]','sequence_slice',5,'p_sequence_slice','miniPythonParser.py',325),
  ('sequence_slice -> expr [ expr : expr ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',326),
  ('sequence_slice -> expr [ : : ]','sequence_slice',5,'p_sequence_slice','miniPythonParser.py',327),
  ('sequence_slice -> expr [ expr : : ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',328),
  ('sequence_slice -> expr [ : expr : ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',329),
  ('sequence_slice -> expr [ : : expr ]','sequence_slice',6,'p_sequence_slice','miniPythonParser.py',330),
  ('sequence_slice -> expr [ expr : expr : ]','sequence_slice',7,'p_sequence_slice','miniPythonParser.py',331),
  ('sequence_slice -> expr [ expr : : expr ]','sequence_slice',7,'p_sequence_slice','miniPythonParser.py',332),
  ('sequence_slice -> expr [ : expr : expr ]','sequence_slice',7,'p_sequence_slice','miniPythonParser.py',333),
  ('sequence_slice -> expr [ expr : expr : expr ]','sequence_slice',8,'p_sequence_slice','miniPythonParser.py',334),
  ('sequence_function_call -> LEN ( expr )','sequence_function_call',4,'p_sequence_function_call','miniPythonParser.py',365),
  ('sequence_method -> expr . APPEND ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',372),
  ('sequence_method -> expr . EXTEND ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',373),
  ('sequence_method -> expr . INSERT ( expr , expr )','sequence_method',8,'p_sequence_method','miniPythonParser.py',374),
  ('sequence_method -> expr . INDEX ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',375),
  ('sequence_method -> expr . POP ( )','sequence_method',5,'p_sequence_method','miniPythonParser.py',376),
  ('sequence_method -> expr . POP ( expr )','sequence_method',6,'p_sequence_method','miniPythonParser.py',377),
  ('sequence_method -> expr . COPY ( )','sequence_method',5,'p_sequence_method','miniPythonParser.py',378),
  ('args -> expr','args',1,'p_args','miniPythonParser.py',390),
  ('args -> expr , args','args',3,'p_args','miniPythonParser.py',391),
  ('args_or_empty -> args','args_or_empty',1,'p_args_or_empty','miniPythonParser.py',401),
  ('args_or_empty -> empty','args_or_empty',1,'p_args_or_empty','miniPythonParser.py',402),
  ('function_call -> ID ( args_or_empty )','function_call',4,'p_function_call','miniPythonParser.py',409),
  ('empty -> <empty>','empty',0,'p_empty','miniPythonParser.py',416),
]
